{"version":3,"file":"static/webpack/static/development/pages/_app.js.26b77844e3e01b3b14b5.hot-update.js","sources":["webpack:///./lib/with-apollo-client.js"],"sourcesContent":["import React from 'react'\nimport initApollo from './init-apollo'\nimport Head from 'next/head'\nimport { getDataFromTree } from 'react-apollo'\n\nexport default App => {\n  return class Apollo extends React.Component {\n    static displayName = 'withApollo(App)'\n    static async getInitialProps(ctx) {\n      const { AppTree } = ctx\n\n      let appProps = {}\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(ctx)\n      }\n\n      // Run all GraphQL queries in the component tree\n      // and extract the resulting data\n      const apollo = initApollo()\n      // if (typeof window === 'undefined') {\n      try {\n        // Run all GraphQL queries\n        await getDataFromTree(<AppTree {...appProps} apolloClient={apollo} />)\n      } catch (error) {\n        // Prevent Apollo Client GraphQL errors from crashing SSR.\n        // Handle them in components via the data.error prop:\n        // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n        console.error('Error while running `getDataFromTree`', error)\n      }\n\n      // getDataFromTree does not call componentWillUnmount\n      // head side effect therefore need to be cleared manually\n      if (typeof window === 'undefined') {\n        Head.rewind()\n      }\n\n      // Extract query data from the Apollo store\n      const apolloState = apollo.cache.extract()\n\n      return {\n        ...appProps,\n        apolloState,\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.apolloClient = initApollo(props.apolloState)\n    }\n\n    render() {\n      return <App apolloClient={this.apolloClient} {...this.props} />\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAUA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;AACA;AACA,+BAEA;AACA;AACA;AACA;AA/BA;AAmCA;AAnCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAsCA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AA3CA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9CA;AACA;AADA;AAAA;AAgDA;;;;A","sourceRoot":""}