{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pavel/Developer/playground/with-apollo-app/components/PostList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query allPosts($first: Int!, $skip: Int!) {\\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\\n      id\\n      votes\\n      url\\n      createdAt\\n    }\\n    _allPostsMeta {\\n      count\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorMessage from './ErrorMessage';\nimport PostUpvoter from './PostUpvoter';\nexport var allPostsQuery = gql(_templateObject());\nexport var allPostsQueryVars = {\n  skip: 0,\n  first: 10\n};\nexport default function PostList() {\n  return React.createElement(Query, {\n    query: allPostsQuery,\n    variables: allPostsQueryVars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        _ref$data = _ref.data,\n        allPosts = _ref$data.allPosts,\n        _allPostsMeta = _ref$data._allPostsMeta,\n        fetchMore = _ref.fetchMore;\n    if (error) return React.createElement(ErrorMessage, {\n      message: \"Error loading posts.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Loading\");\n    var areMorePosts = allPosts.length < _allPostsMeta.count;\n    return React.createElement(\"section\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, allPosts.map(function (post, index) {\n      return React.createElement(\"li\", {\n        key: post.id,\n        className: \"jsx-3530367944\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jsx-3530367944\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jsx-3530367944\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, index + 1, \". \"), React.createElement(\"a\", {\n        href: post.url,\n        className: \"jsx-3530367944\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, post.title), React.createElement(PostUpvoter, {\n        id: post.id,\n        votes: post.votes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    })), areMorePosts ? React.createElement(\"button\", {\n      onClick: function onClick() {\n        return loadMorePosts(allPosts, fetchMore);\n      },\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, ' ', loading ? 'Loading...' : 'Show More', ' ') : '', React.createElement(_JSXStyle, {\n      id: \"3530367944\",\n      __self: this\n    }, \"section.jsx-3530367944{padding-bottom:20px;}li.jsx-3530367944{display:block;margin-bottom:10px;}div.jsx-3530367944{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}a.jsx-3530367944{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}span.jsx-3530367944{font-size:14px;margin-right:5px;}ul.jsx-3530367944{margin:0;padding:0;}button.jsx-3530367944:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXZlbC9EZXZlbG9wZXIvcGxheWdyb3VuZC93aXRoLWFwb2xsby1hcHAvY29tcG9uZW50cy9Qb3N0TGlzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRHdCLEFBR3FDLEFBR04sQUFJSyxBQUlKLEFBT0EsQUFJTixBQUlTLFNBSFIsS0FuQlMsQ0FRRCxBQU9ELElBS25CLENBdkJBLFlBbUJBLENBZkEsQUFRdUIsc0NBY0YsWUFiRixPQWNVLEdBcEJkLE9BT0osU0FDWCxRQWEyRCxrREFwQjNELE9BcUJhLFdBQ0YsU0FDUSxpQkFDVCxRQUNWIiwiZmlsZSI6Ii9Vc2Vycy9wYXZlbC9EZXZlbG9wZXIvcGxheWdyb3VuZC93aXRoLWFwb2xsby1hcHAvY29tcG9uZW50cy9Qb3N0TGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAncmVhY3QtYXBvbGxvJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCBFcnJvck1lc3NhZ2UgZnJvbSAnLi9FcnJvck1lc3NhZ2UnXG5pbXBvcnQgUG9zdFVwdm90ZXIgZnJvbSAnLi9Qb3N0VXB2b3RlcidcblxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzUXVlcnkgPSBncWxgXG4gIHF1ZXJ5IGFsbFBvc3RzKCRmaXJzdDogSW50ISwgJHNraXA6IEludCEpIHtcbiAgICBhbGxQb3N0cyhvcmRlckJ5OiBjcmVhdGVkQXRfREVTQywgZmlyc3Q6ICRmaXJzdCwgc2tpcDogJHNraXApIHtcbiAgICAgIGlkXG4gICAgICB2b3Rlc1xuICAgICAgdXJsXG4gICAgICBjcmVhdGVkQXRcbiAgICB9XG4gICAgX2FsbFBvc3RzTWV0YSB7XG4gICAgICBjb3VudFxuICAgIH1cbiAgfVxuYFxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzUXVlcnlWYXJzID0ge1xuICBza2lwOiAwLFxuICBmaXJzdDogMTAsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvc3RMaXN0KCkge1xuICByZXR1cm4gKFxuICAgIDxRdWVyeSBxdWVyeT17YWxsUG9zdHNRdWVyeX0gdmFyaWFibGVzPXthbGxQb3N0c1F1ZXJ5VmFyc30+XG4gICAgICB7KHsgbG9hZGluZywgZXJyb3IsIGRhdGE6IHsgYWxsUG9zdHMsIF9hbGxQb3N0c01ldGEgfSwgZmV0Y2hNb3JlIH0pID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gPEVycm9yTWVzc2FnZSBtZXNzYWdlPVwiRXJyb3IgbG9hZGluZyBwb3N0cy5cIiAvPlxuICAgICAgICBpZiAobG9hZGluZykgcmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2PlxuXG4gICAgICAgIGNvbnN0IGFyZU1vcmVQb3N0cyA9IGFsbFBvc3RzLmxlbmd0aCA8IF9hbGxQb3N0c01ldGEuY291bnRcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAge2FsbFBvc3RzLm1hcCgocG9zdCwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntpbmRleCArIDF9LiA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9e3Bvc3QudXJsfT57cG9zdC50aXRsZX08L2E+XG4gICAgICAgICAgICAgICAgICAgIDxQb3N0VXB2b3RlciBpZD17cG9zdC5pZH0gdm90ZXM9e3Bvc3Qudm90ZXN9IC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICB7YXJlTW9yZVBvc3RzID8gKFxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGxvYWRNb3JlUG9zdHMoYWxsUG9zdHMsIGZldGNoTW9yZSl9PlxuICAgICAgICAgICAgICAgIHsnICd9XG4gICAgICAgICAgICAgICAge2xvYWRpbmcgPyAnTG9hZGluZy4uLicgOiAnU2hvdyBNb3JlJ317JyAnfVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICcnXG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICBzZWN0aW9uIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBkaXYge1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBidXR0b246YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDZweCA0cHggMCA0cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgKVxuICAgICAgfX1cbiAgICA8L1F1ZXJ5PlxuICApXG59XG5cbmZ1bmN0aW9uIGxvYWRNb3JlUG9zdHMoYWxsUG9zdHMsIGZldGNoTW9yZSkge1xuICBmZXRjaE1vcmUoe1xuICAgIHZhcmlhYmxlczoge1xuICAgICAgc2tpcDogYWxsUG9zdHMubGVuZ3RoLFxuICAgIH0sXG4gICAgdXBkYXRlUXVlcnk6IChwcmV2aW91c1Jlc3VsdCwgeyBmZXRjaE1vcmVSZXN1bHQgfSkgPT4ge1xuICAgICAgaWYgKCFmZXRjaE1vcmVSZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzUmVzdWx0XG4gICAgICB9XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcHJldmlvdXNSZXN1bHQsIHtcbiAgICAgICAgLy8gQXBwZW5kIHRoZSBuZXcgcG9zdHMgcmVzdWx0cyB0byB0aGUgb2xkIG9uZVxuICAgICAgICBhbGxQb3N0czogWy4uLnByZXZpb3VzUmVzdWx0LmFsbFBvc3RzLCAuLi5mZXRjaE1vcmVSZXN1bHQuYWxsUG9zdHNdLFxuICAgICAgfSlcbiAgICB9LFxuICB9KVxufVxuIl19 */\\n/*@ sourceURL=/Users/pavel/Developer/playground/with-apollo-app/components/PostList.js */\"));\n  });\n}\n\nfunction loadMorePosts(allPosts, fetchMore) {\n  fetchMore({\n    variables: {\n      skip: allPosts.length\n    },\n    updateQuery: function updateQuery(previousResult, _ref2) {\n      var fetchMoreResult = _ref2.fetchMoreResult;\n\n      if (!fetchMoreResult) {\n        return previousResult;\n      }\n\n      return _Object$assign({}, previousResult, {\n        // Append the new posts results to the old one\n        allPosts: [].concat(_toConsumableArray(previousResult.allPosts), _toConsumableArray(fetchMoreResult.allPosts))\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/pavel/Developer/playground/with-apollo-app/components/PostList.js"],"names":["Query","gql","ErrorMessage","PostUpvoter","allPostsQuery","allPostsQueryVars","skip","first","PostList","loading","error","data","allPosts","_allPostsMeta","fetchMore","areMorePosts","length","count","map","post","index","id","url","title","votes","loadMorePosts","variables","updateQuery","previousResult","fetchMoreResult"],"mappings":"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","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport PostUpvoter from './PostUpvoter'\n\nexport const allPostsQuery = gql`\n  query allPosts($first: Int!, $skip: Int!) {\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: 10,\n}\n\nexport default function PostList() {\n  return (\n    <Query query={allPostsQuery} variables={allPostsQueryVars}>\n      {({ loading, error, data: { allPosts, _allPostsMeta }, fetchMore }) => {\n        if (error) return <ErrorMessage message=\"Error loading posts.\" />\n        if (loading) return <div>Loading</div>\n\n        const areMorePosts = allPosts.length < _allPostsMeta.count\n        return (\n          <section>\n            <ul>\n              {allPosts.map((post, index) => (\n                <li key={post.id}>\n                  <div>\n                    <span>{index + 1}. </span>\n                    <a href={post.url}>{post.title}</a>\n                    <PostUpvoter id={post.id} votes={post.votes} />\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {areMorePosts ? (\n              <button onClick={() => loadMorePosts(allPosts, fetchMore)}>\n                {' '}\n                {loading ? 'Loading...' : 'Show More'}{' '}\n              </button>\n            ) : (\n              ''\n            )}\n            <style jsx>{`\n              section {\n                padding-bottom: 20px;\n              }\n              li {\n                display: block;\n                margin-bottom: 10px;\n              }\n              div {\n                align-items: center;\n                display: flex;\n              }\n              a {\n                font-size: 14px;\n                margin-right: 10px;\n                text-decoration: none;\n                padding-bottom: 0;\n                border: 0;\n              }\n              span {\n                font-size: 14px;\n                margin-right: 5px;\n              }\n              ul {\n                margin: 0;\n                padding: 0;\n              }\n              button:before {\n                align-self: center;\n                border-style: solid;\n                border-width: 6px 4px 0 4px;\n                border-color: #ffffff transparent transparent transparent;\n                content: '';\n                height: 0;\n                margin-right: 5px;\n                width: 0;\n              }\n            `}</style>\n          </section>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction loadMorePosts(allPosts, fetchMore) {\n  fetchMore({\n    variables: {\n      skip: allPosts.length,\n    },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      if (!fetchMoreResult) {\n        return previousResult\n      }\n      return Object.assign({}, previousResult, {\n        // Append the new posts results to the old one\n        allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\n      })\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"module"}