{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/pavel/Developer/playground/with-apollo-app/components/PostList-2.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorMessage from './ErrorMessage';\nimport PostUpvoter from './PostUpvoter';\nexport const allPostsQuery = gql`\n  query allPosts($first: Int!, $skip: Int!) {\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`;\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: 10\n};\nexport default function PostList() {\n  return React.createElement(Query, {\n    query: allPostsQuery,\n    variables: allPostsQueryVars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data: {\n      allPosts,\n      _allPostsMeta\n    },\n    fetchMore\n  }) => {\n    if (error) return React.createElement(ErrorMessage, {\n      message: \"Error loading posts.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Loading\");\n    const areMorePosts = allPosts.length < _allPostsMeta.count;\n    return React.createElement(\"section\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, allPosts.map((post, index) => React.createElement(\"li\", {\n      key: post.id,\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, index + 1, \". \"), React.createElement(\"a\", {\n      href: post.url,\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.title), React.createElement(PostUpvoter, {\n      id: post.id,\n      votes: post.votes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))), areMorePosts ? React.createElement(\"button\", {\n      onClick: () => loadMorePosts(allPosts, fetchMore),\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, ' ', loading ? 'Loading...' : 'Show More', ' ') : '', React.createElement(_JSXStyle, {\n      id: \"3530367944\",\n      __self: this\n    }, \"section.jsx-3530367944{padding-bottom:20px;}li.jsx-3530367944{display:block;margin-bottom:10px;}div.jsx-3530367944{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}a.jsx-3530367944{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}span.jsx-3530367944{font-size:14px;margin-right:5px;}ul.jsx-3530367944{margin:0;padding:0;}button.jsx-3530367944:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXZlbC9EZXZlbG9wZXIvcGxheWdyb3VuZC93aXRoLWFwb2xsby1hcHAvY29tcG9uZW50cy9Qb3N0TGlzdC0yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ed0IsQUFHcUMsQUFHTixBQUlLLEFBSUosQUFPQSxBQUlOLEFBSVMsU0FIUixLQW5CUyxDQVFELEFBT0QsSUFLbkIsQ0F2QkEsWUFtQkEsQ0FmQSxBQVF1QixzQ0FjRixZQWJGLE9BY1UsR0FwQmQsT0FPSixTQUNYLFFBYTJELGtEQXBCM0QsT0FxQmEsV0FDRixTQUNRLGlCQUNULFFBQ1YiLCJmaWxlIjoiL1VzZXJzL3BhdmVsL0RldmVsb3Blci9wbGF5Z3JvdW5kL3dpdGgtYXBvbGxvLWFwcC9jb21wb25lbnRzL1Bvc3RMaXN0LTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeSB9IGZyb20gJ3JlYWN0LWFwb2xsbydcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXG5pbXBvcnQgRXJyb3JNZXNzYWdlIGZyb20gJy4vRXJyb3JNZXNzYWdlJ1xuaW1wb3J0IFBvc3RVcHZvdGVyIGZyb20gJy4vUG9zdFVwdm90ZXInXG5cbmV4cG9ydCBjb25zdCBhbGxQb3N0c1F1ZXJ5ID0gZ3FsYFxuICBxdWVyeSBhbGxQb3N0cygkZmlyc3Q6IEludCEsICRza2lwOiBJbnQhKSB7XG4gICAgYWxsUG9zdHMob3JkZXJCeTogY3JlYXRlZEF0X0RFU0MsIGZpcnN0OiAkZmlyc3QsIHNraXA6ICRza2lwKSB7XG4gICAgICBpZFxuICAgICAgdGl0bGVcbiAgICAgIGNyZWF0ZWRBdFxuICAgIH1cbiAgICBfYWxsUG9zdHNNZXRhIHtcbiAgICAgIGNvdW50XG4gICAgfVxuICB9XG5gXG5leHBvcnQgY29uc3QgYWxsUG9zdHNRdWVyeVZhcnMgPSB7XG4gIHNraXA6IDAsXG4gIGZpcnN0OiAxMCxcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdExpc3QoKSB7XG4gIHJldHVybiAoXG4gICAgPFF1ZXJ5IHF1ZXJ5PXthbGxQb3N0c1F1ZXJ5fSB2YXJpYWJsZXM9e2FsbFBvc3RzUXVlcnlWYXJzfT5cbiAgICAgIHsoeyBsb2FkaW5nLCBlcnJvciwgZGF0YTogeyBhbGxQb3N0cywgX2FsbFBvc3RzTWV0YSB9LCBmZXRjaE1vcmUgfSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpIHJldHVybiA8RXJyb3JNZXNzYWdlIG1lc3NhZ2U9XCJFcnJvciBsb2FkaW5nIHBvc3RzLlwiIC8+XG4gICAgICAgIGlmIChsb2FkaW5nKSByZXR1cm4gPGRpdj5Mb2FkaW5nPC9kaXY+XG5cbiAgICAgICAgY29uc3QgYXJlTW9yZVBvc3RzID0gYWxsUG9zdHMubGVuZ3RoIDwgX2FsbFBvc3RzTWV0YS5jb3VudFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICB7YWxsUG9zdHMubWFwKChwb3N0LCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e3Bvc3QuaWR9PlxuICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e2luZGV4ICsgMX0uIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj17cG9zdC51cmx9Pntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPFBvc3RVcHZvdGVyIGlkPXtwb3N0LmlkfSB2b3Rlcz17cG9zdC52b3Rlc30gLz5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIHthcmVNb3JlUG9zdHMgPyAoXG4gICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gbG9hZE1vcmVQb3N0cyhhbGxQb3N0cywgZmV0Y2hNb3JlKX0+XG4gICAgICAgICAgICAgICAgeycgJ31cbiAgICAgICAgICAgICAgICB7bG9hZGluZyA/ICdMb2FkaW5nLi4uJyA6ICdTaG93IE1vcmUnfXsnICd9XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgIHNlY3Rpb24ge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGRpdiB7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJ1dHRvbjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNnB4IDRweCAwIDRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICNmZmZmZmYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICApXG4gICAgICB9fVxuICAgIDwvUXVlcnk+XG4gIClcbn1cblxuZnVuY3Rpb24gbG9hZE1vcmVQb3N0cyhhbGxQb3N0cywgZmV0Y2hNb3JlKSB7XG4gIGZldGNoTW9yZSh7XG4gICAgdmFyaWFibGVzOiB7XG4gICAgICBza2lwOiBhbGxQb3N0cy5sZW5ndGgsXG4gICAgfSxcbiAgICB1cGRhdGVRdWVyeTogKHByZXZpb3VzUmVzdWx0LCB7IGZldGNoTW9yZVJlc3VsdCB9KSA9PiB7XG4gICAgICBpZiAoIWZldGNoTW9yZVJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcHJldmlvdXNSZXN1bHRcbiAgICAgIH1cbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBwcmV2aW91c1Jlc3VsdCwge1xuICAgICAgICAvLyBBcHBlbmQgdGhlIG5ldyBwb3N0cyByZXN1bHRzIHRvIHRoZSBvbGQgb25lXG4gICAgICAgIGFsbFBvc3RzOiBbLi4ucHJldmlvdXNSZXN1bHQuYWxsUG9zdHMsIC4uLmZldGNoTW9yZVJlc3VsdC5hbGxQb3N0c10sXG4gICAgICB9KVxuICAgIH0sXG4gIH0pXG59XG4iXX0= */\\n/*@ sourceURL=/Users/pavel/Developer/playground/with-apollo-app/components/PostList-2.js */\"));\n  });\n}\n\nfunction loadMorePosts(allPosts, fetchMore) {\n  fetchMore({\n    variables: {\n      skip: allPosts.length\n    },\n    updateQuery: (previousResult, {\n      fetchMoreResult\n    }) => {\n      if (!fetchMoreResult) {\n        return previousResult;\n      }\n\n      return _Object$assign({}, previousResult, {\n        // Append the new posts results to the old one\n        allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/pavel/Developer/playground/with-apollo-app/components/PostList-2.js"],"names":["Query","gql","ErrorMessage","PostUpvoter","allPostsQuery","allPostsQueryVars","skip","first","PostList","loading","error","data","allPosts","_allPostsMeta","fetchMore","areMorePosts","length","count","map","post","index","id","url","title","votes","loadMorePosts","variables","updateQuery","previousResult","fetchMoreResult"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,aAAa,GAAGH,GAAI;;;;;;;;;;;CAA1B;AAYP,OAAO,MAAMI,iBAAiB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,CADyB;AAE/BC,EAAAA,KAAK,EAAE;AAFwB,CAA1B;AAKP,eAAe,SAASC,QAAT,GAAoB;AACjC,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,aAAd;AAA6B,IAAA,SAAS,EAAEC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAxB;AAAqDC,IAAAA;AAArD,GAAD,KAAsE;AACrE,QAAIJ,KAAJ,EAAW,OAAO,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACX,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEb,UAAMM,YAAY,GAAGH,QAAQ,CAACI,MAAT,GAAkBH,aAAa,CAACI,KAArD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,CAACM,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACZ;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAK,GAAG,CAAf,OADF,EAEE;AAAG,MAAA,IAAI,EAAED,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBH,IAAI,CAACI,KAAzB,CAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAEJ,IAAI,CAACE,EAAtB;AAA0B,MAAA,KAAK,EAAEF,IAAI,CAACK,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADD,CADH,CADF,EAYGT,YAAY,GACX;AAAQ,MAAA,OAAO,EAAE,MAAMU,aAAa,CAACb,QAAD,EAAWE,SAAX,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGL,OAAO,GAAG,YAAH,GAAkB,WAF5B,EAEyC,GAFzC,CADW,GAMX,EAlBJ;AAAA;AAAA;AAAA,umLADF;AA6DD,GAnEH,CADF;AAuED;;AAED,SAASgB,aAAT,CAAuBb,QAAvB,EAAiCE,SAAjC,EAA4C;AAC1CA,EAAAA,SAAS,CAAC;AACRY,IAAAA,SAAS,EAAE;AACTpB,MAAAA,IAAI,EAAEM,QAAQ,CAACI;AADN,KADH;AAIRW,IAAAA,WAAW,EAAE,CAACC,cAAD,EAAiB;AAAEC,MAAAA;AAAF,KAAjB,KAAyC;AACpD,UAAI,CAACA,eAAL,EAAsB;AACpB,eAAOD,cAAP;AACD;;AACD,aAAO,eAAc,EAAd,EAAkBA,cAAlB,EAAkC;AACvC;AACAhB,QAAAA,QAAQ,EAAE,CAAC,GAAGgB,cAAc,CAAChB,QAAnB,EAA6B,GAAGiB,eAAe,CAACjB,QAAhD;AAF6B,OAAlC,CAAP;AAID;AAZO,GAAD,CAAT;AAcD","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport PostUpvoter from './PostUpvoter'\n\nexport const allPostsQuery = gql`\n  query allPosts($first: Int!, $skip: Int!) {\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: 10,\n}\n\nexport default function PostList() {\n  return (\n    <Query query={allPostsQuery} variables={allPostsQueryVars}>\n      {({ loading, error, data: { allPosts, _allPostsMeta }, fetchMore }) => {\n        if (error) return <ErrorMessage message=\"Error loading posts.\" />\n        if (loading) return <div>Loading</div>\n\n        const areMorePosts = allPosts.length < _allPostsMeta.count\n        return (\n          <section>\n            <ul>\n              {allPosts.map((post, index) => (\n                <li key={post.id}>\n                  <div>\n                    <span>{index + 1}. </span>\n                    <a href={post.url}>{post.title}</a>\n                    <PostUpvoter id={post.id} votes={post.votes} />\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {areMorePosts ? (\n              <button onClick={() => loadMorePosts(allPosts, fetchMore)}>\n                {' '}\n                {loading ? 'Loading...' : 'Show More'}{' '}\n              </button>\n            ) : (\n              ''\n            )}\n            <style jsx>{`\n              section {\n                padding-bottom: 20px;\n              }\n              li {\n                display: block;\n                margin-bottom: 10px;\n              }\n              div {\n                align-items: center;\n                display: flex;\n              }\n              a {\n                font-size: 14px;\n                margin-right: 10px;\n                text-decoration: none;\n                padding-bottom: 0;\n                border: 0;\n              }\n              span {\n                font-size: 14px;\n                margin-right: 5px;\n              }\n              ul {\n                margin: 0;\n                padding: 0;\n              }\n              button:before {\n                align-self: center;\n                border-style: solid;\n                border-width: 6px 4px 0 4px;\n                border-color: #ffffff transparent transparent transparent;\n                content: '';\n                height: 0;\n                margin-right: 5px;\n                width: 0;\n              }\n            `}</style>\n          </section>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction loadMorePosts(allPosts, fetchMore) {\n  fetchMore({\n    variables: {\n      skip: allPosts.length,\n    },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      if (!fetchMoreResult) {\n        return previousResult\n      }\n      return Object.assign({}, previousResult, {\n        // Append the new posts results to the old one\n        allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\n      })\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"module"}